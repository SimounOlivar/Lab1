def mean(numbers):
    """Return the mean (average) of a list of numbers."""
    if not numbers:
        raise ValueError("The list is empty")
    return sum(numbers) / len(numbers)


def median(numbers):
    """Return the median (middle value) of a list of numbers."""
    if not numbers:
        raise ValueError("The list is empty")
    
    sorted_nums = sorted(numbers)
    n = len(sorted_nums)
    mid = n // 2

    if n % 2 == 0:
        # Even number of elements → average of the two middle values
        return (sorted_nums[mid - 1] + sorted_nums[mid]) / 2
    else:
        # Odd number of elements → middle value
        return sorted_nums[mid]


def mode(numbers):
    """Return the mode (most frequent value) of a list of numbers.
    If multiple values have the same highest frequency, 
    the first one encountered is returned."""
    if not numbers:
        raise ValueError("The list is empty")
    
    frequency = {}
    for num in numbers:
        frequency[num] = frequency.get(num, 0) + 1

    max_count = max(frequency.values())
    # Return the first number with max frequency
    for num, count in frequency.items():
        if count == max_count:
            return num